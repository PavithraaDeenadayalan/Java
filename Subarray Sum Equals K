import java.util.HashMap;

class Solution {
    public int subarraySum(int[] nums, int k) {
        int count = 0, sum = 0;
        HashMap<Integer, Integer> map = new HashMap<>();
        map.put(0, 1); // Base case for sum = k

        for (int num : nums) {
            sum += num; // Running prefix sum
            
            // If (sum - k) exists in the map, it means there's a subarray summing to k
            if (map.containsKey(sum - k)) {
                count += map.get(sum - k);
            }
            
            // Store the current prefix sum count
            map.put(sum, map.getOrDefault(sum, 0) + 1);
        }
        return count;
    }
}
